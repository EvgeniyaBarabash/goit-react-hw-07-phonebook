{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contact-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","components/Form/FormEditor.js","components/Filter/Filter.js","App.js","redux/contacts/contact-reducer.js","redux/store.js","index.js","components/Form/FormEditor.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactError","addContactSuccess","deleteContactRequest","deleteContactSuccess","deleteContactError","changeContact","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","post","then","catch","error","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","useDispatch","className","s","wrapper","list","map","item","text","type","btn","onClick","contactsOperation","FormEditor","useState","setName","setNumber","handleChange","event","target","value","clearForm","onSubmit","e","preventDefault","alert","form","title","htmlFor","pattern","required","onChange","input","Filter","label","App","useEffect","createReducer","_","payload","console","log","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f40bb4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__BytMh\",\"label\":\"Filter_label__2g7l2\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactError = createAction('contacts/addContactError');\r\nexport const addContactSuccess = createAction('contacts/addContactSucces');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeContact = createAction('contacts/changeContacts');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from '../contacts/contact-action';\r\n\r\naxios.defaults.baseURL =\r\n  'https://61bf061fb25c3a00173f4c43.mockapi.io/contacts/';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContactRequest());\r\n    axios\r\n      .post('contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contacts-operation';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selector';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={s.item}>\r\n            <p className={s.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className={s.btn}\r\n              onClick={() => dispatch(contactsOperation.deleteContact(id))}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport s from './FormEditor.module.css';\r\nimport contactsOperation from '../../redux/contacts/contacts-operation';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selector';\r\nexport default function FormEditor() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : dispatch(contactsOperation.addContact({ name, number }));\r\n    clearForm();\r\n  };\r\n  const clearForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.title} htmlFor=\"user-name\">\r\n        Name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleChange}\r\n        value={name}\r\n        id=\"user-name\"\r\n        className={s.input}\r\n      />\r\n\r\n      <label className={s.title} htmlFor=\"user-number\">\r\n        Number\r\n      </label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleChange}\r\n        value={number}\r\n        id=\"user-number\"\r\n        className={s.input}\r\n      />\r\n\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {changeContact} from '../../redux/contacts/contact-action';\r\nimport { getFilter } from '../../redux/contacts/contacts-selector';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Фильтр по имени\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(changeContact(e.target.value))}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport './App.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport FormEditor from 'components/Form/FormEditor';\r\nimport Filter from 'components/Filter/Filter';\r\nimport contactsOperations from './redux/contacts/contacts-operation';\r\nimport { getLoading } from 'redux/contacts/contacts-selector';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(getLoading);\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2 className=\"title\">Phonebook</h2>\r\n      <FormEditor />\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      {loading && <h1>Загружаем...</h1>}\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactError,\r\n  addContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeContact,\r\n} from '../contacts/contact-action';\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [changeContact]: (state, { payload }) => payload,\r\n});\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: error => console.log(error),\r\n  [addContactError]: error => console.log(error),\r\n  [deleteContactError]: error => console.log(error),\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contacts/contact-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FormEditor_title__K81eD\",\"form\":\"FormEditor_form__1vGbB\",\"btn\":\"FormEditor_btn__3-jr0\",\"input\":\"FormEditor_input__3CNoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Oe3R\",\"item\":\"ContactList_item__2tVkJ\",\"btn\":\"ContactList_btn__sdvsq\",\"text\":\"ContactList_text__1CuZv\",\"title\":\"ContactList_title__In6iI\"};"],"sourceRoot":""}